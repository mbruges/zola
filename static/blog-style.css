@charset "UTF-8";

:root,
.light-mode {
    --b: #fffce4;
    --t: #313131;
    --a: #51518a;
    --s: #80808034;
    --border-radius: 0.5em;
    --highlight: rgba(255, 243, 74, 0.57);
    --font-family: sans-serif;
    --load-icon: url("/images/load-icon.svg");
    font-size: 13.5pt;
    line-height: 1.35;
    background: var(--b);
    color: var(--t);
    max-width: 80ch;
    padding: 0.6em;
    margin: auto;
    font-family: var(--font-family);
    list-style-type: "\2712 ";
}

body,
html {
    padding-top: 0em !important;
}

@media (prefers-color-scheme: dark) {
    :root,
    .dark-mode {
        --t: #fffce4;
        --b: #313131;
        --a: #fcf199;
    }
}

html,
body {
    overflow-x: hidden;
}

h1 {
    margin: 1.4em 0 0.1em;
    text-align: center;
    padding-bottom: 1rem;
    border-bottom: 2px solid var(--a);
}

h1:not(:first-of-type) {
    display: none;
}

h1,
h2,
h3,
.subheading {
    font-family: monospace;
}

h2,
h3 {
    margin-top: 1em;
    margin-bottom: 0.2em;
}

.subheading {
    text-align: center !important;
    font-style: italic !important;
    opacity: 0.9 !important;
}

button,
pre,
img,
input,
textarea {
    border-radius: var(--border-radius);
    padding: 0.4rem;
}

@media (min-width: 550px) {
    aside,
    blockquote:has(a[href*="aside"]),
    img[alt*="aside"] {
        width: 30%;
        padding: 0.5em !important;
        margin: 0.1em -0.2em 1em 1em !important;
        float: right;
    }

    p > img[alt*="aside"] ~ em,
    .caption {
        clear: both;
        min-width: 30%;
        float: right;
        width: fit-content;
        margin-top: -1.5em; /* Adjusting margin to ensure it appears directly underneath the img */
        margin-left: auto;
        margin-right: auto; /* Center align under image */
        padding: 0;
        font-size: 0.8em;
        font-style: italic;
        text-align: center;
        opacity: 0.75;
    }

    aside > p {
        border: 2pt dashed var(--t) !important;
        background-color: rgba(0, 0, 0, 0.085);
        padding: 0.5em !important;
    }
}

.footnotes-list {
    font-size: 0.8em;
}

.footnote-reference a {
    text-decoration: none !important;
}

.footnotes-list [href*="fr-"] {
    font-size: 1.1em;
    text-decoration: none !important;
}
.zola-anchor {
    text-decoration: none !important;
    opacity: 0.5;
    font-size: 0.8em;
    padding-left: 0.5em;
    visibility: hidden; /* Initially hidden */
}

h2:hover .zola-anchor,
h2:active .zola-anchor {
    visibility: visible; /* Visible when h2 is hovered */
}

.textbook-content {
    max-width: fit-content;
    margin-left: auto;
    margin-right: auto;
}

img {
    max-height: 40vh;
    max-width: 95%;
    border-radius: 15px;
    padding: -1em;
    margin: -1em;
}

p > img ~ em,
.caption {
    max-width: 80%;
    width: fit-content;
    display: block;
    margin-top: -0.1em;
    margin-left: auto;
    margin-right: auto;
    padding: 0;
    font-size: 0.8em;
    font-style: italic;
    text-align: center;
    opacity: 0.75;
}

img,
.center {
    display: block;
    text-align: center;
    margin: auto;
}

a:hover,
button:hover,
a:active {
    filter: brightness(130%);
    cursor: pointer;
    text-decoration: underline wavy 1pt;
}

a {
    color: var(--a);
    text-decoration: underline solid 1px;
    font-family: monospace;
    font-size: 0.99em;
}

#date-bar {
    width: 100%;
    height: 0.7em;
    border-bottom: 2px solid var(--a);
    text-align: center;
    margin: none;
    padding: none;
}

#date-tag {
    font-size: 0.7em;
    font-family: monospace;
    border-radius: var(--border-radius);
    background-color: var(--a);
    color: var(--b);
    border: 2px solid var(--a);
    margin: none;
    padding: 0.1em;
    padding-left: 1em;
    padding-right: 1em;
    vertical-align: middle;
}

button {
    background: var(--t);
    color: var(--b);
    font-weight: bold;
    font-size: 1em;
    text-decoration: none !important;
}

input,
textarea {
    background: var(--s);
    font-size: 1em;
    color: var(--t);
    border: 2px solid var(--t);
    margin-right: -0.7em;
    padding-right: 1em;
}

small,
sup {
    font-size: 0.7em;
    display: inline;
}

table {
    background: var(--t);
    padding: 0.2em;
    font-size: 0.9em;
    text-align: center;
    margin: auto;
    min-width: 20%;
    border-radius: var(--border-radius);
}

th {
    color: var(--b);
    padding-left: 0.5em;
    padding-right: 0.5em;
}

td {
    padding: 0.35rem;
    background: var(--b);
}

li {
    padding-bottom: 0px;
}

ul {
    list-style-type: "\2712 \00a0";
}

li ul {
    list-style: "\2711 \00a0";
    font-size: 0.8em;
}

ul input {
    margin-right: 0.5em;
}

li:has(input) {
    list-style: "";
    padding-left: 0em;
}

ul:has(input) {
    padding-left: 1em;
}

marker columns,
.columns {
    padding-top: 0.1rem;
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 1rem;
}

footer {
    text-align: center;
    font-size: 0.7rem;
    display: block;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    opacity: 0.8;
    font-family: monospace;
}

hr {
    opacity: 0.8;
}

/* strong > em,
em > strong {
    color: var(--text) !important;
    background-color: var(--highlight);
    font-style: normal;
    margin: -0.2em;
    padding: 0.15em;
    border-radius: 0.3em;
    border-right: 4px;
} */

blockquote,
pre:has(code.language-quote) {
    font-family: serif;
    color: black;
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
    padding: 0.4em;
    border: 3px solid black;
    box-shadow: 8px 7px 7px rgba(0, 0, 0, 0.552);
    background-color: rgb(255, 247, 236);
    border-radius: 0px;
}

blockquote a {
    color: #51518a;
}

blockquote p br {
    display: block;
    margin: 0.6em 0;
    content: " ";
}

/* CAPTION for QUOTE

By adding a nested quote, a small caption can be positioned at the bottom of the text, for attribution */

blockquote blockquote {
    padding: 0px;
    border: none;
    font-style: italic;
    box-shadow: none;
    font-size: 0.7em;
    text-align: right;
    position: relative;
    display: flex;
    margin-right: 1px;
    margin-bottom: -1em;
    margin-top: -20px;
    padding-bottom: -0px;
    color: rgba(0, 0, 0, 0.705);
    height: fit-content;
    background: transparent;
}

blockquote blockquote p::before {
    content: "~";
    display: inline-block;
    vertical-align: top;
    margin-right: 0.2em;
}

code {
    padding: 0.1em;
    font-size: 0.85rem;
}

h1 code,
h2 code,
h3 code {
    font-size: 1em;
}

p code,
li code {
    /*border: 1px solid var(--a);*/
    color: whitesmoke;
    background: black;
    border-radius: 0.3em;
    margin-bottom: 0.2;
    display: inline-flex;
}

a code {
    color: inherit;
    text-decoration: underline solid 3pt;
}

pre {
    overflow-wrap: break-word;
    white-space: pre-wrap;
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
    color: var(--text);
}

pre code {
    color: white;
}

pre:has(code) {
    border: 5px solid #2b303b;
    border-radius: 0.5em;
    background: rgb(46, 46, 46);
    padding-top: 15px;
    box-shadow: 8px 7px 7px rgba(0, 0, 0, 0.552);
    text-align: left;
    height: fit-content;
    padding-top: 0px;
    min-width: 60%;
}

pre:has(code)::before {
    position: relative;
    display: block;
    top: -1rem;
    right: 1px;
    padding: 0px;
    color: white;
    margin-left: auto;
    font-size: 10pt;
    margin-right: -4.3em;
    padding-bottom: 1;
    font-family: monospace;
}

pre:has(code[class*="language-"]) {
    border-top: 1.3em solid #2b303b;
}

pre:has(code.language-markdown)::before {
    content: "üî¥ üü° üü¢      #Ô∏è‚É£ markdown";
}

pre:has(code.language-python)::before {
    content: "üî¥ üü° üü¢      üêç python3";
}

pre:has(code.language-html)::before {
    content: "üî¥ üü° üü¢      üåê <HTML>";
}

pre:has(code.language-go)::before {
    content: "üî¥ üü° üü¢      ‚öôÔ∏è Golang";
}

pre:has(code.language-bash)::before {
    content: "üî¥ üü° üü¢      ‚öôÔ∏è bash";
}

.language-quote {
    font-size: 1em;
    font-family: serif;
    max-height: fit-content;
}

pre:has(code.language-pre),
pre:has(code.language-quote),
pre:has(code.language-blank) {
    border: none !important;
    border-radius: 0.5em;
    background: transparent;
    padding-top: 15px;
    box-shadow: none;
    text-align: left;
    height: fit-content;
    padding-top: 0px;
    font-size: 1.1rem;
    border
}

code.language-pre {
    color: var(--text);
}

pre:has(code.language-blank)::before,
pre:has(code.language-quote)::before,
pre:has(code.language-pre)::before {
    content: none;
}

pre:has(code.language-blank)::after,
pre:has(code.language-quote)::after,
pre:has(code.language-pre)::after {
    content: none;
}

ol > li::marker {
    font-weight: bold;
    font-size: 1.1em;
    position: relative;
    padding: 0px;
    margin: 0px;
}

ol {
    list-style: numbers;
}

/* Black keyboard effect*/
kbd,
a > code,
.dark-button,
.light-button {
    font-size: 0.9em;
    line-height: 2em;
    box-shadow: 0 7px 0 2px rgba(16, 16, 16, 0.959);
    padding-left: 1em;
    padding-right: 1em;
    margin: 0.2em;
    font-weight: bold;
    max-width: fit-content;
    border: none;
    border-radius: 6.5px;
    color: whitesmoke;
    display: inline-block;
    font-family: sans-serif;
    text-transform: uppercase;
    vertical-align: middle;
    background-color: rgb(47, 47, 47);
    text-decoration: none;
    border: 1px solid rgb(44, 44, 44);
}

.light-button {
    background-color: rgb(238, 235, 222);
    color: black;
}

a:focus > code {
    box-shadow: 0 1px 0 2px rgba(126, 126, 126, 0.702);
    transform: translateY(6px);
}

.load {
    display: inline-block;
    animation: rotate 1s linear infinite;
    transform-origin: center;
}

@keyframes rotate {
    from {
        transform: rotate(0deg); /* Start at 0 degrees */
    }
    to {
        transform: rotate(360deg); /* Rotate to 360 degrees */
    }
}

@media print {
    html,
    body {
        -webkit-filter: grayscale(100%);
        filter: grayscale(100%);
    }
    nav,
    footer,
    #xmas,
    .lightswitch {
        display: none;
    }
}

[aria-busy=true]:not(input, select, textarea, html) {
  white-space: nowrap;
}

[aria-busy=true]:not(input, select, textarea, html)::before {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-image: var(--load-icon);
  background-size: 1em auto;
  background-repeat: no-repeat;
  content: "";
  vertical-align: -0.125em;
}

[aria-busy=true] {
  pointer-events: none;
  text-align: center;
}
